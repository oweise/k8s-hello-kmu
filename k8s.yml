apiVersion: v1
kind: Service
metadata:
  name: k8s-hello
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: k8s-hello
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-hello
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 2
      maxSurge: 2
  selector:
    matchLabels:
      app: k8s-hello
  template:
    metadata:
      labels:
        app: k8s-hello
    spec:
      containers:
      - name: k8s-hello
        image: CONTAINER_IMAGE
        securityContext:
          privileged: false
          readOnlyRootFilesystem: false
          allowPrivilegeEscalation: false
        ports:
        - containerPort: 8080
        env:
        - name: DB_HOST
          value: k8s-hello-kmu-psql.clprbf7eazbu.eu-west-1.rds.amazonaws.com
        - name: DB_NAME
          value: k8s_hello_kmu
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: DB_PWD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        livenessProbe:
          exec:
            httpGet:
              path: /
              port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
